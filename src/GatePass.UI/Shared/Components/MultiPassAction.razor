@using GatePass.UI.Pages.MultiPasses
@inject IGeneratePDFService _pdfService

<MudMenu Label="Actions" 
         Variant="Variant.Filled" 
         DisableElevation="true" 
         EndIcon="@Icons.Material.Filled.KeyboardArrowDown"
         IconColor="Color.Secondary">

    <MudMenuItem OnClick="_ => OnEditPass()">Edit Pass</MudMenuItem>
    <MudMenuItem OnClick="_ => OnPrintPass()">Print Pass</MudMenuItem>
</MudMenu>

@code {
    [Parameter, EditorRequired]
    public MultiplePass MultiPass { get; set; } = new();

    [Parameter, EditorRequired]
    public EventCallback<bool> OnPassUpdate { get; set; }

    async Task OpenSinglePassModal(bool edit)
    {
        var options = new DialogOptions()
            {
                DisableBackdropClick = true,
                Position = DialogPosition.TopCenter,
                FullWidth = true,
                MaxWidth = MaxWidth.Small
            };

        var parameters = new DialogParameters();
        parameters.Add("MultiPass", MultiPass);

        var dialog = _dialog.Show<MultiPassFormModal>("Edit Multi Pass Entry", parameters, options);

        var result = await dialog.Result;

        if (!result.Canceled)
        {
            await OnPassUpdate.InvokeAsync();
        }
    }

    async Task OnEditPass()
    {
        await OpenSinglePassModal(edit: true);
    }

    async Task OnPrintPass()
    {
        var bytes = _pdfService.GenerateMultiPassPdf(MultiPass);

        await _jsRuntime.InvokeVoidAsync("Download", new
        {
            Base64 = Convert.ToBase64String(bytes),
            FileName = MultiPass.Id + ".pdf",
            MimeType = "application/pdf"
        });
    }
}
