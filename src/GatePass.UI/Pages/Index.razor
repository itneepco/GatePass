@page "/"
@using System.Security.Claims
@using GatePass.Core.PassAggregate.Specifications
@using GatePass.UI.Extensions
@attribute [Authorize]

@inject IReadRepository<Visitor> _vistorRepo;
@inject IReadRepository<Location> _locationRepo;
@inject IReadRepository<SinglePass> _singlePassRepo;
@inject IReadRepository<MultiplePass> _multiPassRepo;



<MudGrid Style="margin-top: 0.15rem">
    @if (currentUser.IsInRole("Admin"))
    {
        <MudItem xs="6" md="3">
            <MudPaper Class="d-flex align-center justify-space-around px-4 py-8">
                <MudIcon Icon="@Icons.Material.Filled.LocationCity" Size="Size.Large" />
                <div class="d-flex flex-column align-center justify-center">
                    <MudText Typo="Typo.body2">Total Locations</MudText>
                    <MudText Typo="Typo.h4">@locationCount</MudText>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" md="3">
            <MudPaper Class="d-flex align-center justify-space-around px-4 py-8">
                <MudIcon Icon="@Icons.Material.Filled.Person" Size="Size.Large" />
                <div class="d-flex flex-column align-center justify-center">
                    <MudText Typo="Typo.body2">Total Visitors</MudText>
                    <MudText Typo="Typo.h4">@visitorCount</MudText>
                </div>
            </MudPaper>
        </MudItem>
    }
    else
    {
        <MudItem xs="6" md="3">
            <MudPaper Class="d-flex align-center justify-space-around px-4  py-8">
                <MudIcon Icon="@Icons.Material.Filled.Person" Size="Size.Large" />
                <div class="d-flex flex-column align-center justify-center">
                    <MudText Typo="Typo.body2">Today's Visitor</MudText>
                    <MudText Typo="Typo.h4">@todaysCount</MudText>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" md="3">
            <MudPaper Class="d-flex align-center justify-space-around px-4 py-8">
                <MudIcon Icon="@Icons.Material.Filled.Timer" Size="Size.Large" />
                <div class="d-flex flex-column align-center justify-center">
                    <MudText Typo="Typo.body2">Today's Exit Pending</MudText>
                    <MudText Typo="Typo.h4">@todaysExitPending</MudText>
                </div>
            </MudPaper>
        </MudItem>
    }

    <MudItem xs="6" md="3">
        <MudPaper Class="d-flex align-center justify-space-around px-4  py-8">
            <MudIcon Icon="@Icons.Material.Filled.Foundation" Size="Size.Large" />
            <div class="d-flex flex-column align-center justify-center">
                <MudText Typo="Typo.body2">Total Single Pass</MudText>
                <MudText Typo="Typo.h4">@singlePassCount</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="6" md="3">
        <MudPaper Class="d-flex align-center justify-space-around px-4 py-8">
            <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Size="Size.Large" />
            <div class="d-flex flex-column align-center justify-center">
                <MudText Typo="Typo.body2">Total Multi Pass</MudText>
                <MudText Typo="Typo.h4">@multiPassCount</MudText>
            </div>
        </MudPaper>
    </MudItem>
</MudGrid>

@*<MudGrid Style="margin-top: 1rem">
    <MudItem xs="12">
        <MudPaper Class="pa-3">
            <div Class="d-flex flex-row justify-center">
                <MudItem>
                    <MudSelect T="string" Value="@("2022")"
                               Label="Select Year"
                               Variant="Variant.Outlined"
                               Margin="Margin.Dense"
                               AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem Value="@("2021")" />
                        <MudSelectItem Value="@("2022")" />
                        <MudSelectItem Value="@("2023")" />
                    </MudSelect>
                </MudItem>
            </div>

            <MudChart ChartType="ChartType.Bar"
                      ChartSeries="@Series"
                      @bind-SelectedIndex="charIndex"
                      XAxisLabels="@XAxisLabels"
                      Width="100%" Height="350px" />
        </MudPaper>
    </MudItem>
</MudGrid>*@

@code {
    int visitorCount;
    int locationCount;
    int singlePassCount;
    int multiPassCount;
    int todaysCount;
    int todaysExitPending;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = default!;

    ClaimsPrincipal currentUser = default!;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        currentUser = authState.User;

        if (currentUser.IsInRole("Admin"))
        {
            visitorCount = await _vistorRepo.CountAsync();
            locationCount = await _locationRepo.CountAsync();
            singlePassCount = await _singlePassRepo.CountAsync();
            multiPassCount = await _multiPassRepo.CountAsync();
        }
        else 
        {
            var locationId = currentUser.GetLocationId();
            singlePassCount = await _singlePassRepo.CountAsync(new SinglePassByLocationIdSpec(locationId));
            multiPassCount = await _multiPassRepo.CountAsync(new MultiPassByLocationIdSpec(locationId));

            todaysCount = await _singlePassRepo.CountAsync(new SinglePassByLocationIdAndDateSpec(locationId, DateTime.Today));
            todaysExitPending = await _singlePassRepo.CountAsync(new SinglePassExitPendingByLocationIdSpec(locationId));
        }
    }

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Single Day Pass", Data = new double[] { 40, 20, 25, 27, 46, 60, 48, 80, 15, 99, 70 ,65 } },
        new ChartSeries() { Name = "Multiple Day Pass", Data = new double[] { 19, 24, 35, 13, 28, 15, 13, 16, 31, 37, 39, 28 } },
    };
    public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };
}