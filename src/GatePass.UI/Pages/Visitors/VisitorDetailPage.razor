@page "/visitors/detail/{Id}"
@using GatePass.Core.PassAggregate
@using GatePass.Core.PassAggregate.Specifications

@inject IRepository<Visitor> _visitorRepo;
@inject IRepository<SinglePass> _singlePassRepo;

<HeroTitle Title="Visitors" Description="Visitor Details"/>

@if (visitor == null)
{
    <p>Not found</p>
    return;
}

<MudPaper Class="pa-3 mb-6">
    <MudGrid Spacing="2" Justify="Justify.Center">
        <MudItem sm="4">
            <MudImage Fluid="true" Src="@visitorPhoto" Class="rounded-lg" Height="180" />
        </MudItem>

        <MudItem sm="8">
            <MudGrid Spacing="1">
                <MudItem xs="6">
                    <MudGrid Class="flex-column" Spacing="0">
                        <MudItem>
                            <MudText Typo="Typo.caption">Full Name</MudText>
                        </MudItem>
                        <MudItem>
                            <MudText Typo="Typo.subtitle1">@visitor.FirstName @visitor.LastName</MudText>
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="6">
                    <MudGrid Class="flex-column" Spacing="0">
                        <MudItem>
                            <MudText Typo="Typo.caption">Phone</MudText>
                        </MudItem>
                        <MudItem>
                            <MudText Typo="Typo.subtitle1">@visitor.Phone</MudText>
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="6">
                    <MudGrid Class="flex-column" Spacing="0">
                        <MudItem>
                            <MudText Typo="Typo.caption">Identification Type</MudText>
                        </MudItem>
                        <MudItem>
                            <MudText Typo="Typo.subtitle1">@visitor.IdentificationType</MudText>
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="6">
                    <MudGrid Class="flex-column" Spacing="0">
                        <MudItem>
                            <MudText Typo="Typo.caption">Identification No</MudText>
                        </MudItem>
                        <MudItem>
                            <MudText Typo="Typo.subtitle1">@visitor.IdentificationNo</MudText>
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="12">
                    <MudGrid Class="flex-column" Spacing="0">
                        <MudItem>
                            <MudText Typo="Typo.caption">Address</MudText>
                        </MudItem>
                        <MudItem>
                            <MudText Typo="Typo.subtitle1">@visitor.Address</MudText>
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem>
                    <MudButton Href="@editUrl" Color="Color.Secondary" Variant="Variant.Outlined">Edit</MudButton>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
</MudPaper>

<MudTabs PanelClass="pt-4">
    <MudTabPanel Text="Single Pass">
        <MudTable ServerData="@(new Func<TableState, Task<TableData<SinglePass>>>(ReloadSinglePasses))"
                  Hover="true">
            <ToolBarContent>
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Add Pass</MudButton>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Officer To Visit</MudTh>
                <MudTh>Department</MudTh>
                <MudTh>Purpose</MudTh>
                <MudTh>In Time</MudTh>
                <MudTh>Out Time</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Officer To Visit">@context.OfficerToVisit</MudTd>
                <MudTd DataLabel="Department">@context.Department</MudTd>
                <MudTd DataLabel="Purpose">@context.Purpose</MudTd>
                <MudTd DataLabel="In Time">@context.InTime</MudTd>
                <MudTd DataLabel="Out Time">@context.OutTime</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Multiple Pass">
        <MudText>Content Two</MudText>
    </MudTabPanel>
</MudTabs>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    Visitor? visitor;
    string? visitorPhoto;
    string? editUrl;

    protected override async Task OnParametersSetAsync()
    {
        visitor = await _visitorRepo.GetByIdAsync(Guid.Parse(Id));

        if (visitor == null)
        {
            _snackbar.Add("No visitor found", Severity.Error);
            return;
        }

        visitorPhoto = $"/Photos/{visitor.PhotoName}";
        editUrl = $"visitors/upsert/{visitor.Id}";
    }


    async Task<TableData<SinglePass>> ReloadSinglePasses(TableState state)
    {
        var spec = new SinglePassByVisitorIdPaginationSpec(state.Page, state.PageSize, Guid.Parse(Id));
        var singlePasses = await _singlePassRepo.ListAsync(spec);
        var totalCount = await _singlePassRepo.CountAsync();

        return new TableData<SinglePass>() { TotalItems = totalCount, Items = singlePasses };
    }
}
